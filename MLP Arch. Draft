
class MLP:
  def __init__(self, number_of_input_units, number_of_hidden_units, number_of_output_units, eta):
    self.ius=number_of_input_units
    self.hus=number_of_hidden_units
    self.ous=number_of_output_units
    self.eta=eta
    W_hi= ... # weights matrix from input to hidden layer
    W_oh=... # weights matrix from hidden layer to output
    #...

  def train(self, list_of_input_vectors)
    pass

  def backpropagation(self, list_of_input_vectors)
    pass

def batch_alg(self, TR):
  MLP.train(TR)
  MLP.backpropagation(TR)

def online_alg(self, TR):
  for p in TR:
    MLP.train(p)
    MLP.backpropagation(p)
